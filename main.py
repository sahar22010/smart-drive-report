import streamlit as st
import matplotlib.pyplot as plt
from fpdf import FPDF
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
import random
import numpy as np
from matplotlib.patches import Circle

# ÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑÿ•ŸäŸÖŸäŸÑ - ÿßÿ≥ÿ™ÿ®ÿØŸÑŸáÿß ÿ®ÿ®ŸäÿßŸÜÿßÿ™ŸÉ
SENDER_EMAIL = "smartdrive.report@gmail.com"
APP_PASSWORD = "owjj okgp ljbl gztg"

def create_chart(values):
    categories = ['Speed', 'Focus', 'Calmness', 'Aggression', 'Distraction']
    colors = ['#1f77b4', '#2ca02c', '#ff7f0e', '#d62728', '#9467bd']
    
    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 6))
    
    # ÿßŸÑÿ±ÿ≥ŸÖ ÿßŸÑÿ®ŸäÿßŸÜŸä
    bars = ax1.bar(categories, values, color=colors)
    ax1.set_title('Driving Performance', fontsize=14, pad=20)
    ax1.set_ylim([0, 150])
    
    for bar in bars:
        height = bar.get_height()
        ax1.text(bar.get_x() + bar.get_width()/2., height,
                 f'{height}%',
                 ha='center', va='bottom', fontsize=10)
    
    # ÿØÿßÿ¶ÿ±ÿ© ÿßŸÑÿ£ÿØÿßÿ°
    overall_score = np.mean(values)
    color = '#2ca02c' if overall_score > 70 else '#ff7f0e' if overall_score > 40 else '#d62728'
    circle = Circle((0.5, 0.5), 0.4, fill=False, linewidth=10, color=color)
    ax2.add_patch(circle)
    ax2.text(0.5, 0.5, f'{overall_score:.0f}%', 
             ha='center', va='center', fontsize=24, fontweight='bold')
    ax2.set_title('Overall Score', fontsize=14, pad=20)
    ax2.axis('off')
    
    plt.tight_layout()
    chart_path = "chart.png"
    fig.savefig(chart_path, bbox_inches='tight', dpi=150)
    plt.close(fig)
    return chart_path, overall_score

def generate_tip(score):
    if score > 80:
        return (
            "EXCELLENT DRIVING!\n\n"
            "‚Ä¢ You're in the top 10% of drivers!\n"
            "‚Ä¢ Maintain your perfect focus\n"
            "‚Ä¢ Keep this safe driving pattern\n"
            "‚Ä¢ Take breaks every 2 hours\n\n"
            "Advice: Share your skills with others!"
        )
    elif score > 50:
        return (
            "GOOD PERFORMANCE\n\n"
            "‚Ä¢ Slightly reduce distractions\n"
            "‚Ä¢ Improve smooth acceleration\n"
            "‚Ä¢ Check mirrors more frequently\n"
            "‚Ä¢ Anticipate other drivers' moves\n\n"
            "Advice: Small tweaks will make you excellent!"
        )
    else:
        return (
            "NEEDS IMPROVEMENT\n\n"
            "‚Ä¢ Reduce aggressive maneuvers\n"
            "‚Ä¢ Eliminate phone usage\n"
            "‚Ä¢ Maintain steady speed\n"
            "‚Ä¢ Increase following distance\n\n"
            "Advice: Consider a defensive driving course."
        )

def create_pdf(chart_path, values, overall_score):
    pdf = FPDF()
    
    # ÿßŸÑÿµŸÅÿ≠ÿ© ÿßŸÑÿ£ŸàŸÑŸâ
    pdf.add_page()
    pdf.set_font('Arial', 'B', 24)
    pdf.cell(0, 15, 'SMART DRIVE REPORT', 0, 1, 'C')
    pdf.ln(10)
    
    pdf.set_font('Arial', '', 14)
    pdf.cell(0, 8, f'Speed: {values[0]} km/h', 0, 1)
    pdf.cell(0, 8, f'Focus: {values[1]}%', 0, 1)
    pdf.cell(0, 8, f'Calmness: {values[2]}%', 0, 1)
    pdf.cell(0, 8, f'Aggression: {values[3]}%', 0, 1)
    pdf.cell(0, 8, f'Distraction: {values[4]}%', 0, 1)
    pdf.ln(15)
    
    pdf.image(chart_path, x=10, w=190)
    pdf.ln(15)
    
    # ÿßŸÑÿµŸÅÿ≠ÿ© ÿßŸÑÿ´ÿßŸÜŸäÿ©
    pdf.add_page()
    pdf.set_font('Arial', 'B', 18)
    pdf.cell(0, 10, 'PERSONALIZED DRIVING TIPS', 0, 1)
    pdf.ln(10)
    
    pdf.set_font('Arial', '', 14)
    pdf.multi_cell(0, 8, generate_tip(overall_score))
    
    pdf.ln(15)
    pdf.set_font('Arial', 'I', 10)
    pdf.cell(0, 10, 'Report generated by Sahar Jamal', 0, 0, 'C')
    
    pdf.output("driving_report.pdf")
    return True

def send_email(to_email):
    msg = MIMEMultipart()
    msg['From'] = SENDER_EMAIL
    msg['To'] = to_email
    msg['Subject'] = "Your SmartDrive Report is Ready!"
    
    body = """
Hello Driver,

Your personalized SmartDrive report is attached.

This includes:
- Your driving performance scores
- Detailed analysis
- Custom improvement tips

Drive safely!
- Sahar Jamal
"""
    msg.attach(MIMEText(body, 'plain'))
    
    with open("driving_report.pdf", "rb") as f:
        attach = MIMEApplication(f.read(), _subtype="pdf")
        attach.add_header('Content-Disposition', 'attachment', filename="driving_report.pdf")
        msg.attach(attach)
    
    with smtplib.SMTP_SSL('smtp.gmail.com', 465) as server:
        server.login(SENDER_EMAIL, APP_PASSWORD)
        server.send_message(msg)

def main():
    st.set_page_config(page_title="SmartDrive Report", layout="centered")
    st.title("üöó SmartDrive Analytics")
    
    st.markdown("""
    <p style='text-align:center;'>
    By: <b>Sahar Jamal</b><br>
    <span style='color:gray; font-size:14px;'>
    Prototype for demonstration purposes
    </span>
    </p>
    """, unsafe_allow_html=True)
    
    email = st.text_input("Your Email Address")
    
    if st.button("Generate My Report"):
        if "@" in email and "." in email:
            # ÿ™ŸàŸÑŸäÿØ ÿ®ŸäÿßŸÜÿßÿ™ ÿπÿ¥Ÿàÿßÿ¶Ÿäÿ© ÿ®ŸÜŸÅÿ≥ ÿßŸÑÿ∑ÿ±ŸäŸÇÿ© ÿßŸÑÿ£ÿµŸÑŸäÿ©
            values = [
                random.randint(60, 140),  # Speed
                random.randint(50, 100),  # Focus
                random.randint(40, 100),  # Calmness
                random.randint(0, 100),   # Aggression
                random.randint(0, 100)     # Distraction
            ]
            
            chart_path, score = create_chart(values)
            if create_pdf(chart_path, values, score):
                send_email(email)
                st.success("‚úÖ Report sent successfully! Check your email.")
            else:
                st.error("‚ùå Failed to generate report")
        else:
            st.warning("‚ö† Please enter a valid email address")

if __name__ == "__main__":
    main()
