import streamlit as st
import matplotlib.pyplot as plt
from fpdf import FPDF
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
import random
import numpy as np
from matplotlib.patches import Circle

# Email settings
SENDER_EMAIL = "smartdrive.report@gmail.com"
APP_PASSWORD = "owjj okgp ljbl gztg"  # Replace with your actual password

def create_chart(values):
    categories = ['Speed', 'Focus', 'Calmness', 'Aggression', 'Distraction']
    colors = ['#1f77b4', '#2ca02c', '#ff7f0e', '#d62728', '#9467bd']
    
    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 6))
    
    # Bar chart
    bars = ax1.bar(categories, values, color=colors)
    ax1.set_title('Driving Performance', fontsize=14, pad=20)
    ax1.set_ylim([0, 150])
    
    for bar in bars:
        height = bar.get_height()
        ax1.text(bar.get_x() + bar.get_width()/2., height,
                 f'{height}%',
                 ha='center', va='bottom', fontsize=10)
    
    # Score circle
    overall_score = np.mean(values)
    color = '#2ca02c' if overall_score > 70 else '#ff7f0e' if overall_score > 40 else '#d62728'
    circle = Circle((0.5, 0.5), 0.4, fill=False, linewidth=10, color=color)
    ax2.add_patch(circle)
    ax2.text(0.5, 0.5, f'{overall_score:.0f}%', 
             ha='center', va='center', fontsize=24, fontweight='bold')
    ax2.set_title('Overall Score', fontsize=14, pad=20)
    ax2.axis('off')
    
    plt.tight_layout()
    chart_path = "chart.png"
    fig.savefig(chart_path, bbox_inches='tight', dpi=150)
    plt.close(fig)
    return chart_path, overall_score

def generate_tip(score):
    if score > 80:
        return (
            "EXCELLENT DRIVING!\n\n"
            "â€¢ You're in the top 10% of drivers!\n"
            "â€¢ Maintain your perfect focus\n"
            "â€¢ Keep this safe driving pattern\n"
            "â€¢ Take breaks every 2 hours\n\n"
            "Advice: Share your skills with others!"
        )
    elif score > 50:
        return (
            "GOOD PERFORMANCE\n\n"
            "â€¢ Slightly reduce distractions\n"
            "â€¢ Improve smooth acceleration\n"
            "â€¢ Check mirrors more frequently\n"
            "â€¢ Anticipate other drivers' moves\n\n"
            "Advice: Small tweaks will make you excellent!"
        )
    else:
        return (
            "NEEDS IMPROVEMENT\n\n"
            "â€¢ Reduce aggressive maneuvers\n"
            "â€¢ Eliminate phone usage\n"
            "â€¢ Maintain steady speed\n"
            "â€¢ Increase following distance\n\n"
            "Advice: Consider a defensive driving course."
        )

def create_pdf(chart_path, values, overall_score):
    pdf = FPDF()
    
    # First page - Summary
    pdf.add_page()
    pdf.set_font('Arial', 'B', 24)
    pdf.cell(0, 15, 'SMART DRIVE REPORT', 0, 1, 'C')
    pdf.ln(10)
    
    pdf.set_font('Arial', '', 14)
    pdf.cell(0, 8, f'Speed: {values[0]} km/h', 0, 1)
    pdf.cell(0, 8, f'Focus: {values[1]}%', 0, 1)
    pdf.cell(0, 8, f'Calmness: {values[2]}%', 0, 1)
    pdf.cell(0, 8, f'Aggression: {values[3]}%', 0, 1)
    pdf.cell(0, 8, f'Distraction: {values[4]}%', 0, 1)
    pdf.ln(15)
    
    pdf.image(chart_path, x=10, w=190)
    pdf.ln(15)
    
    # Second page - Tips
    pdf.add_page()
    pdf.set_font('Arial', 'B', 18)
    pdf.cell(0, 10, 'PERSONALIZED DRIVING TIPS', 0, 1)
    pdf.ln(10)
    
    pdf.set_font('Arial', '', 14)
    pdf.multi_cell(0, 8, generate_tip(overall_score))
    
    pdf.ln(15)
    pdf.set_font('Arial', 'I', 10)
    pdf.cell(0, 10, 'Report generated by Sahar Jamal', 0, 0, 'C')
    
    try:
        pdf.output("driving_report.pdf")
        return True
    except Exception as e:
        st.error(f"Failed to generate PDF: {str(e)}")
        return False

def send_email(to_email):
    message = MIMEMultipart()
    message["From"] = SENDER_EMAIL
    message["To"] = to_email
    message["Subject"] = "Your SmartDrive Report is Ready!"
    
    body = """
Hello Driver,

Your personalized SmartDrive report is attached.

This includes:
- Your driving performance scores
- Detailed analysis
- Custom improvement tips

Drive safely!
- Sahar Jamal
"""
    message.attach(MIMEText(body, "plain"))
    
    try:
        with open("driving_report.pdf", "rb") as f:
            part = MIMEApplication(f.read(), Name="SmartDrive_Report.pdf")
            part['Content-Disposition'] = 'attachment; filename="SmartDrive_Report.pdf"'
            message.attach(part)
        
        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
            server.login(SENDER_EMAIL, APP_PASSWORD)
            server.send_message(message)
        return True
    except Exception as e:
        st.error(f"Failed to send email: {str(e)}")
        return False

def main():
    st.set_page_config(page_title="SmartDrive Report", layout="centered")
    
    # Header
    st.markdown("""
    <h1 style='text-align: center; color: #2E86C1; margin-bottom: 5px;'>
    ðŸš— SmartDrive â€“ AI-Powered Driving Analysis
    </h1>
    <p style='text-align: center; font-size: 20px; color: #5D6D7E; margin-top: 5px;'>
    Know your drive. Improve it.
    </p>
    """, unsafe_allow_html=True)
    
    # Email input
    email = st.text_input("Your Email Address")
    
    if st.button("Generate My Report"):
        if "@" in email and "." in email:
            # Generate random driving data
            values = [
                random.randint(60, 140),
                random.randint(50, 100),
                random.randint(40, 100),
                random.randint(0, 100),
                random.randint(0, 100)
            ]
            
            chart_path, score = create_chart(values)
            if create_pdf(chart_path, values, score):
                if send_email(email):
                    st.success("âœ… Report sent successfully! Check your email.")
                else:
                    st.error("Failed to send email")
            else:
                st.error("Failed to generate report")
        else:
            st.warning("Please enter a valid email address")
    
    # Project description
    st.markdown("""
    <div style='margin-top: 30px; padding: 15px; background-color: #F8F9F9; border-radius: 8px;'>
    <p style='font-size: 16px; color: #2E86C1;'>
    This is just the beginning. In the future, I aim to develop this project into a real system that can be applied nationwide using surveillance cameras to monitor driving and prevent dangerous behavior â€” starting from this prototype based on random data.
    </p>
    <p style='font-size: 16px; color: #2E86C1;'>
    The goal is to protect lives and improve road safety across all communities.
    </p>
    </div>
    """, unsafe_allow_html=True)
    
    # Footer
    st.markdown("""
    <p style='text-align:center; font-size: 14px; color: #7F8C8D; margin-top: 50px;'>
    Developed by Sahar Jamal | AI Road Safety Prototype
    </p>
    """, unsafe_allow_html=True)

if __name__== "__main__":
    main()
